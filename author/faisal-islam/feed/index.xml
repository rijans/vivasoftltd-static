<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Faisal Islam &#8211; Vivasoft</title>
	<atom:link href="/author/faisal-islam/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Top Software Company with Talented Geeks</description>
	<lastBuildDate>Fri, 20 May 2022 12:08:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1</generator>

<image>
	<url>/wp-content/uploads/2021/08/cropped-feb-icon-32x32.png</url>
	<title>Faisal Islam &#8211; Vivasoft</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Accelerating PHP Application</title>
		<link>/blog/accelerating-php-application/</link>
		
		<dc:creator><![CDATA[Faisal Islam]]></dc:creator>
		<pubDate>Thu, 19 May 2022 15:56:34 +0000</pubDate>
				<category><![CDATA[Programming & Development]]></category>
		<category><![CDATA[Technology]]></category>
		<guid isPermaLink="false">/?p=8474</guid>

					<description><![CDATA[Introduction During past couple of years we were using platforms/websites that were failing under heavy load. That got us thinking. How to create something that people can take ideas from and build upon which can handle reasonable load in reasonable expenses. For that we created a goal to handle 30,000 requests per minute in the [&#8230;]]]></description>
										<content:encoded><![CDATA[<h3>Introduction</h3>
<p>During past couple of years we were using platforms/websites that were failing under heavy load. That got us thinking. How to create something that people can take ideas from and build upon which can handle reasonable load in reasonable expenses. For that we created a goal to handle <strong>30,000 requests per minute</strong> in the most cost-effective way.</p>
<p>To handle this situation we were thinking to develop such an application with GoLang, which itself is a very efficient platform in itself. But later decided to engage with more audiences picked a challenge ourselves and set up our goal to build the application with PHP.</p>
<h3>Challenges</h3>
<p>We set the target to serve 30,000 requests per minute (<strong>500 requests per/sec</strong>).</p>
<h3>Framework Selection</h3>
<p>We choose lumen for its simplicity.</p>
<h3>Database Selection</h3>
<p>Most PHP applications work with MySQL database. However, we don’t need MySQL for all the cases. We chose NoSQL for this application and decided to use <strong>MongoDB</strong>.</p>
<h3>Tweaking</h3>
<p>Lumen is fast but not enough to serve 30K requests per minute for our application, which was supposed to be run with minimum resources. So, we added some sauce over Lumen named <strong>Swoole</strong>.</p>
<h3>What is SWOOLE?</h3>
<p>Compared with other async programming frameworks or software such as Nginx, Tornado, and Node.js, Open Swoole is a complete async solution that has built-in support for async programming via fibers/coroutines, a range of multi-threaded I/O modules (HTTP Server, WebSockets, TaskWorkers, Process Pools) and support for popular PHP clients like PDO for MySQL, Redis, and CURL. You can use sync or async, coroutine, fiber API to write the applications or create thousands of lightweight fibers within one Linux process. Swoole enhances the efficiency of your PHP applications and brings you out of the traditional stateless model, enabling you to focus on the development of innovative products at a high scale, brining event loops and asynchronous programming to the PHP language.</p>
<p>You will find more about Swoole on their<strong> <a href="https://openswoole.com/" rel="nofollow noopener" target="_blank">official website</a>.</strong></p>
<h3>Benchmark</h3>
<p>Here is some performance benchmark for our demo application:</p>
<p><strong>Machine description:</strong></p>
<p>Initial load tests were done in the following configuration:</p>
<p>1. <strong>2x t3.medium</strong> (2CPU/4GB Mem) instances to host API.<br />
2. <strong>1x t3.small</strong> (2CPU/2GB Mem)Redis cluster with 1 node.<br />
3. MongoDB hosted in <strong>1x t3.medium</strong> (2CPU/4GB Mem) instance.<br />
4. Tsung hosted in <strong>GCP in 4 pods</strong>.</p>
<p><img decoding="async" class="alignnone wp-image-8476 size-large" src="/wp-content/uploads/2022/05/Screenshot-2022-05-19-at-6.45.01-PM-1024x549.png" alt="Load Test" width="1024" height="549" srcset="/wp-content/uploads/2022/05/Screenshot-2022-05-19-at-6.45.01-PM-980x525.png 980w, /wp-content/uploads/2022/05/Screenshot-2022-05-19-at-6.45.01-PM-480x257.png 480w" sizes="(min-width: 0px) and (max-width: 480px) 480px, (min-width: 481px) and (max-width: 980px) 980px, (min-width: 981px) 1024px, 100vw" /></p>
<h3>Alternative</h3>
<p><strong>Falcon with Swoole</strong> combination could be an alternative solution. We choose <strong>Lumen</strong> for its simplicity over Falcon.</p>
<p><strong>Laravel Octane</strong> is also can be a good choice.</p>
<h3><strong>You will find this project on Github:</strong></h3>
<p><strong>API:</strong> <a href="https://github.com/vivasoft-ltd/movement-pass-api" rel="nofollow noopener" target="_blank">https://github.com/vivasoft-ltd/movement-pass-api</a><br />
<strong>UI:</strong> <a href="https://github.com/vivasoft-ltd/movement-pass-ui" rel="nofollow noopener" target="_blank">https://github.com/vivasoft-ltd/movement-pass-ui</a></p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
